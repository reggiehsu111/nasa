// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
/**
 * @ignore
 */
export class LocationRouting {
    get ignorePreferredLocation() {
        return this.pIgnorePreferredLocation;
    }
    get locationIndexToRoute() {
        return this.pLocationIndexToRoute;
    }
    get locationEndpointToRoute() {
        return this.pLocationEndpointToRoute;
    }
    routeToLocation(endpointOrIndex, ignorePreferredLocation) {
        if (typeof ignorePreferredLocation !== "undefined" && typeof endpointOrIndex === "number") {
            this.pLocationIndexToRoute = endpointOrIndex;
            this.pIgnorePreferredLocation = ignorePreferredLocation;
            this.pLocationEndpointToRoute = undefined;
        }
        else if (typeof ignorePreferredLocation === "undefined" &&
            typeof endpointOrIndex === "string") {
            this.pLocationEndpointToRoute = endpointOrIndex;
            this.pLocationIndexToRoute = undefined;
            this.pIgnorePreferredLocation = undefined;
        }
        else {
            throw new Error("Invalid arguments passed to routeToLocation");
        }
    }
    clearRouteToLocation() {
        this.pLocationEndpointToRoute = undefined;
        this.pLocationIndexToRoute = undefined;
        this.pIgnorePreferredLocation = undefined;
    }
}
//# sourceMappingURL=LocationRouting.js.map